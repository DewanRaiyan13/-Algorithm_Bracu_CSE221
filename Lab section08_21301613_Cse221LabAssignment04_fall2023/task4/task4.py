# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jh3ZJVxPiF-3_9OtTktWKVlN0wmgmHpF
"""

#task4
def is_cycle_present(adj_list, n):
  visited = [False] * (n + 1)
  rec_stack = [False] * (n + 1)

  def dfs(node):
    visited[node] = True
    rec_stack[node] = True

    for neighbor in adj_list[node]:
      if not visited[neighbor]:
        if dfs(neighbor):
          return True
      elif rec_stack[neighbor]:
        return True

    rec_stack[node] = False
    return False

  for i in range(1, n+1):
      if not visited[i]:
          if dfs(i):
              return True

  return False

if __name__ == '__main__':
  with open('/content/sample_data/input-04', 'r') as f:
    n, m = map(int, f.readline().split())
    adj_list = [[] for _ in range(n + 1)]
    for _ in range(m):
      u, v = map(int, f.readline().split())
      adj_list[u].append(v)

  cycle_present = is_cycle_present(adj_list, n)

  with open('/content/sample_data/output-04', 'w') as f:
    if cycle_present:
      f.write("YES\n")
    else:
      f.write("NO\n")